# Workflow to manually trigger the scraping of all help center documentation files
name: "Help Center batch files scraper"

on:
  workflow_dispatch:
    inputs:
      files:
        description: 'Comma-separated list of files to process'
        required: false
        type: string

jobs:
  find-files:
    if: inputs.files == ''
    runs-on: ubuntu-latest
    name: Find files and create batches
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find all markdown files
        id: find-files
        run: |
          # Ensure we're only searching in docs/ directory
          if [ ! -d "docs" ]; then
            echo "Error: docs directory not found!"
            exit 1
          fi
          
          # Find all markdown files in docs/ and its subdirectories
          FILES=$(find docs -type f \( -name "*.md" -o -name "*.mdx" \) | tr '\n' ',')
          
          if [ -z "$FILES" ]; then
            echo "Error: No markdown files found in docs/ directory!"
            exit 1
          fi
          
          echo "Found files:"
          echo "$FILES"
          echo "files<<EOF" >> "$GITHUB_OUTPUT"
          echo "$FILES" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Create batches and trigger workflows
        run: |
          # Count total files by counting commas and adding 1
          total_files=$(echo "${{ steps.find-files.outputs.files }}" | tr -cd ',' | wc -c)
          total_files=$((total_files + 1))
          batch_size=500
          
          echo "Total files to process: $total_files"
          
          # Process files in batches of 500
          current_pos=0
          batch_number=1
          
          while [ $current_pos -lt $total_files ]; do
            # Get the next batch of files
            batch=$(echo "${{ steps.find-files.outputs.files }}" | cut -d',' -f$((current_pos + 1))-$((current_pos + batch_size)))
            
            # Count files in this batch
            batch_count=$(echo "$batch" | tr -cd ',' | wc -c)
            batch_count=$((batch_count + 1))
            
            echo "Triggering workflow for batch $batch_number with $batch_count files"
            echo "Files in this batch: $batch"
            
            # Trigger a new workflow run with this batch
            gh workflow run docsearch-scraper-batch.yml -f files="$batch"
            
            # Move to next batch
            current_pos=$((current_pos + batch_size))
            batch_number=$((batch_number + 1))
            
            # Add a small delay between triggers to avoid rate limits
            if [ $current_pos -lt $total_files ]; then
              echo "Waiting 5 seconds before next batch..."
              sleep 5
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  process-batch:
    if: inputs.files != ''
    runs-on: ubuntu-latest
    name: Process batch of files
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Helpcenter Scraper
        uses: vtexdocs/devportal-docsearch-action@main
        with:
          algolia_application_id: '${{ secrets.ALGOLIA_APP_ID }}'
          algolia_api_key: ${{ secrets.ALGOLIA_WRITE_KEY }}
          files: './configs/scraper_helpcenter_files.json'
          added: ${{ inputs.files }}
          debug: true